//3456789012345678901234567890123456789012345678
// Condition class
// i'm biggner then has bugs. on Paused

var rune
var condition
// kind. "buff" or "debuff"
var kind
var conditionName
var stuckCount
var remainingTime

// like a constructor.
// contisonsText string ex.) foe.debuffs.string
func setState(contisonsText)
  ?contisonsText = null
    >`0,23,#ff0000,setState#contisonsText=[@contisonsText@]
    loc.Pause()

  ?0 <= string.IndexOf(contisonsText, ":")
    var contisonsArray = string.Split(contisonsText, ":")
    ?contisonsArray.Count() = 4
      rune = contisonsArray[0]
      condition = contisonsArray[1]
      stuckCount = int.Parse(contisonsArray[2])
      remainingTime = int.Parse(contisonsArray[3])
      ?0 <= string.IndexOf(condition, "_")
        var array = string.Split(condition, "_")
        kind = array[0]
        conditionName = array[1]
      :
        >`0,23,#ff0000,setState#condition=[@condition@]
        loc.Pause()
    :
      >`0,23,#ff0000,setState#contisonsText=[@contisonsText@]
      loc.Pause()
  :
    >`0,23,#ff0000,setState#contisonsText=[@contisonsText@]
    loc.Pause()

// condition string ex.) smite or chill, dot, damage, feeble
// return this is target then return true, else then return false.
func is(conditionText)
  return 0 <= string.IndexOf(condition, conditionText)
